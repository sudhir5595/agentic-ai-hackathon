import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // Ensure this file is generated by FlutterFire CLI
import 'package:google_sign_in/google_sign_in.dart';
import 'package:firebase_auth/firebase_auth.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Google Sign-In Demo',
      debugShowCheckedModeBanner: false,
      home: SignInScreen(),
    );
  }
}

class SignInScreen extends StatefulWidget {
  @override
  _SignInScreenState createState() => _SignInScreenState();
}

class _SignInScreenState extends State<SignInScreen> {
  String? _userEmail;
  String? _errorMsg;

  Future<void> _signInWithGoogle() async {
    try {
      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();

      if (googleUser == null) {
        // User cancelled the sign-in
        if (mounted) { // Check if the widget is still in the tree
          setState(() {
            _errorMsg = "Sign-in aborted by user.";
          });
        }
        return;
      }

      final GoogleSignInAuthentication googleAuth = await googleUser.authentication;

      final AuthCredential credential = GoogleAuthProvider.credential(
        accessToken: googleAuth.accessToken,
        idToken: googleAuth.idToken,
      );

      final UserCredential userCredential =
      await FirebaseAuth.instance.signInWithCredential(credential);
      final User? user = userCredential.user;

      if (mounted) {
        setState(() {
          _userEmail = user?.email;
          _errorMsg = null;
        });
      }
    } on FirebaseAuthException catch (e) {
      if (mounted) {
        setState(() {
          _errorMsg = 'FirebaseAuth Error: ${e.code} - ${e.message}';
        });
      }
      print('FirebaseAuthException: ${e.code} - ${e.message}'); // For more detailed logging
    } catch (e) {
      if (mounted) {
        setState(() {
          _errorMsg = 'Unknown Sign-In Error: $e';
        });
      }
      print('Unknown Sign-In Error: $e'); // For more detailed logging
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 24.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              ElevatedButton.icon(
                icon: Icon(Icons.login),
                label: Text('Sign in with Google'),
                onPressed: _signInWithGoogle,
              ),
              SizedBox(height: 20),
              Text(
                _userEmail != null ? 'Signed in as: $_userEmail' : 'Not signed in',
                style: TextStyle(fontSize: 16),
              ),
              if (_errorMsg != null) ...[
                SizedBox(height: 20),
                Text(
                  _errorMsg!,
                  style: TextStyle(color: Colors.red, fontSize: 14),
                  textAlign: TextAlign.center,
                ),
              ],
            ],
          ),
        ),
      ),
    );
  }
}
